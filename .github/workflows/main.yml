name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # (1) 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # (2) Docker Hub 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # (3) Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/docker-garden-app
          docker build --no-cache -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # (4) SSH를 통해 EC2에 접속하여 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker Hub 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # 기존 애플리케이션 컨테이너 중지 및 삭제
            docker stop my-app || true
            docker rm my-app || true

            # 기존 Redis 컨테이너 중지 및 삭제
            docker stop my-redis || true
            docker rm my-redis || true

            # 최신 Docker 이미지 가져오기
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/docker-garden-app
            docker pull $IMAGE_NAME:latest

            # Redis 컨테이너 실행 (백그라운드 실행)
            docker run -d --name my-redis -p 6379:6379 redis:latest

            # Node.js 애플리케이션 컨테이너 실행
            docker run -d --name my-app -p 3000:3000 \
              --link my-redis \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e FLOWER_SERVICE_KEY=${{ secrets.FLOWER_SERVICE_KEY }} \
              -e REDIS_URL=redis://my-redis:6379 \
              -e FRONT_DOMAIN=${{ secrets.FRONT_DOMAIN }} \
              -e STOPWATCH=${{ secrets.STOPWATCH }} \
              $IMAGE_NAME:latest